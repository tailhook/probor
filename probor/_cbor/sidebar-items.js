initSidebarItems({"enum":[["DecodeError",""],["EncodeError",""]],"fn":[["maybe","When decoding an item which may be `Undefined` this function will map `Undefined` to `None` and any other value to `Some(value)`."],["opt","When decoding an optional item, i.e. a `Null` value has to be considered, this function will map `Null` to `None` and any other value to `Some(value)`."],["or_break","When decoding an indefinite item, every element item can be a `Break` value. By wrapping it in `or_break`, this case can be handled more conveniently."]],"mod":[["decoder","CBOR (RFC 7049) decoder implementation supporting the following features:"],["encoder","CBOR (RFC 7049) encoder implementation."],["skip","`Skip` trait to allow efficient skipping of consecutive bytes."],["slice","`ReadSlice` trait to allow efficient reading of slices without copying."],["types","CBOR types and tags definitions."],["value","This module defines the generic `Value` AST as well as several  other types to represent CBOR values. A `Cursor` can be used to deconstruct and traverse a `Value`."]],"struct":[["Config","`Config` contains various settings which limit resource consumption or enable certain validation options. Please note that the various maximum length/size values apply to an individual element only."],["Decoder","The actual decoder type definition"],["Encoder","The actual encoder type definition"],["GenericDecoder","A generic decoder decodes arbitrary CBOR into a `Value` AST."],["GenericEncoder","A generic encoder encodes a `Value`."]],"type":[["DecodeResult",""],["EncodeResult",""]]});